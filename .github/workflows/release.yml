name: Release from tag

on:
  push:
    tags:
      - 'v*.*.*'     # e.g. v0.3.9
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional tag to release (e.g., v0.3.9). Leave empty to use current ref.'
        required: false
        default: ''

permissions:
  contents: write      # needed to create a GitHub Release

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  make-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # If manual run with a specific tag, check it out:
          ref: ${{ inputs.tag != '' && inputs.tag || '' }}

      - name: Get version from tag
        id: v
        run: |
          tag="${GITHUB_REF##*/}"
          if [ -n "${{ inputs.tag }}" ]; then
            tag="${{ inputs.tag }}"
          fi
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "version=${tag#v}" >> "$GITHUB_OUTPUT"

      - name: Ensure CHANGELOG.md has a section for this version
        run: |
          ver="${{ steps.v.outputs.version }}"
          test -f CHANGELOG.md || { echo "::error::CHANGELOG.md is missing"; exit 1; }
          # Fixed-string match (no regex surprises with dots)
          if ! grep -Fq "## [${ver}]" CHANGELOG.md; then
            echo "::error::CHANGELOG.md does not contain section for [${ver}]"
            exit 1
          fi

      - name: Extract release notes from CHANGELOG.md
        id: notes
        shell: bash
        run: |
          ver="${{ steps.v.outputs.version }}"
          # Normalize CRLF -> LF and extract until next version header
          awk -v ver="$ver" '
            { sub(/\r$/, "", $0) }
            $0 ~ "^## \\[" ver "\\]" {flag=1; next}
            flag && $0 ~ "^## \\[" {flag=0}
            flag {print}
          ' CHANGELOG.md > RELEASE_NOTES.md

          if [ ! -s RELEASE_NOTES.md ]; then
            echo "::error::RELEASE_NOTES.md is empty for version [$ver]."
            exit 1
          fi

          echo "----- RELEASE NOTES (preview) -----"
          head -n 50 RELEASE_NOTES.md || true
          echo "-----------------------------------"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.v.outputs.tag }}
          name: RepoSmith v${{ steps.v.outputs.version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
